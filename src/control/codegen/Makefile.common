BUILD_DIR = build
LIB_DIR = lib

CFLAGS += -Wall -Wextra -Werror -std=c11 -pedantic -O3 -Iinclude
ARFLAGS = rcs

STATIC_SRCS     = Static/src/tilt-correction.c Static/src/location-correction.c
GENERATED_SRCS  = Output/src/attitude-controller.c Output/src/altitude-controller.c Output/src/navigation-controller.c
SRCS            = $(STATIC_SRCS) $(GENERATED_SRCS)
OBJ             = $(SRCS:%.c=$(BUILD_DIR)/%.o)
DEP             = $(OBJ:%.o=%.d)
OUTPUTLIB       = libcontrollers.a
TEMPLATES       = altitude-controller.template.c attitude-controller.template.c navigation-controller.template.c
TEMPLATES_FULL  = $(TEMPLATES:%=../Templates/%)
MATLAB_DEP      = GetParamsAndMatrices.m quat_params.m Codegen.m ExportParamsAndMatrices.m
MATLAB_DEP     += GenerateAltitudeController.m GenerateAltitudeObserver.m GenerateAttitudeController.m GenerateAttitudeObserver.m GenerateNavigationController.m GenerateNavigationObserver.m
MATLAB_DEP_FULL = $(MATLAB_DEP:%=../%)

$(OUTPUTLIB) : $(LIB_DIR)/$(OUTPUTLIB)

# Actual target of the library - depends on all .o files.
# Just link all the object files.
$(LIB_DIR)/$(OUTPUTLIB) : $(OBJ)
	mkdir -p $(LIB_DIR)
	$(AR) $(ARFLAGS) $@ $^

# Include all .d files
-include $(DEP)

# Build target for every single object file.
# The potential dependency on header files is covered
# by calling `-include $(DEP)`.
# The -MMD flags additionaly creates a .d file with
# the same name as the .o file.
$(BUILD_DIR)/%.o : %.c
	mkdir -p $(@D)
	$(CC) $(CFLAGS) -MMD -c $< -o $@

# Code generator
$(GENERATED_SRCS) : $(MATLAB_DEP_FULL) $(TEMPLATES_FULL)
	cd .. && matlab -nodisplay -nosplash -nodesktop -nojvm -r "try, run('Codegen.m'), catch e, disp(getReport(e)), exit(1), end, exit(0);"

.PHONY: clean
clean:
	rm -rf $(BUILD_DIR) $(LIB_DIR) ./Output/*
